version: '3.8'

services:
  # Frontend React application
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile.prod
    ports:
      - "80:80"
    restart: always
    environment:
      - NODE_ENV=production
    depends_on:
      - backend
    networks:
      - agromark_network

  # Backend Express.js application
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    ports:
      - "5000:5000"
    restart: always
    environment:
      - NODE_ENV=production
      - PORT=5000
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD}@db:5432/agromark
      - JWT_SECRET=${JWT_SECRET}
      - SOLANA_NETWORK=${SOLANA_NETWORK:-mainnet}
      - REDIS_URL=redis://redis:6379
    depends_on:
      - db
      - redis
    networks:
      - agromark_network

  # PostgreSQL database
  db:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=agromark
    restart: always
    networks:
      - agromark_network

  # Redis for caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: always
    networks:
      - agromark_network

networks:
  agromark_network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: 